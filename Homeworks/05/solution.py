REPOSITORY = 'https://github.com/nelly-hateva/python-homeworks/tree/master/Homeworks'

# Двадесет неща, които научих:
#
# 1.  Научих, че обекти, които не се изменят (като списъкът от интервалите 
#     за зодиакалните знаци в първа задача или като почти всички обекти от
#     задачата за Морския шах), е добре да бъдат константи (с главни букви).
# 2.  Научих, че константите се пишат извън тялото на функциите.
# 3.  Научих, че двойките ключ - стойност в речник се итерират с items().
# 4.  Науччих, че, за да кръстим наша променлива с име, което е запазена дума
#     в езика , слагаме '_' след името й.
# 5.  Научих, че обект от тип 'itertools.repeat' няма метод len().
# 6.  Научих, че мога да използвам zip вместо list comprehension и да смятам
#     явно дължината на най-късия итеруем обект (zip_with - Второ домашно).
# 7.  Научих, че е излишно да давам име на обект, ако после ще го използвам 
#     само на едно място в програмата. Пример:
#         result = function(*arguments)
#         yield result
#     Мога просто да напиша yield function(*arguments). Изключение са
#     случаите, в който редът става много дълъг.
# 8.  Научих, че не може в генератор функция да има return с аргумент, но може
#     да има само return.
# 9.  Научих, че OrderedDict има метод popitem, който има аргумент по 
#     подразбиране last. Ако не е оказано друго, last е True и OrderedDict
#     се държи като стек. Ако окажем last да бъде False, OrderedDict се държи
#     като опашка.
# 10. Научих, че не е добре да използваме nonlocal променливи.
# 11. Научих, че повтряемият код е признак, че нещо може да стане и по-хитро.
#     Най-често това е една допълнителна функция, която трябва да дефинирам
#     и да я извиквам с различни аргументи.
# 12. Научих, че доброто именуване на обектите прави кода по-четим.
# 13. Научих, че има метод product в itertools, който дава декартово
#     произведение на поредиците, които дадем като аргументи.
# 14. Научих, че ако дефинираме константи в класа, за да ги използваме 
#     в някоя функция, трябва да се достъпват чрез инстанция на класа.
# 15. Научих, че е безмислено съобшението на грешката(Exception) да е със същото
#     име като класа на грешката. Името на грешката трябва да бъде достатъчно
#     описателно.
# 16. Научих, че има метод join, който приема поредица и разделител
#     и конкатенира низовете.
# 17. Научих, че има класов метод на речник fromkeys, който приема поредица
#     от ключове и стойност по подразбиране.
# 18. Научих, че за предпочитане е 'if cond is None' пред 'if cond == None'.
# 19. Научих, че има многоредов низ в езика, който ограждаме на първия и
#     последния ред с три кавички (единични или двойни).
# 20. Научих, че ако в многоредов низ има whitespace на края на някой ред
#     стилистичната проверка с pep8 не минава, което ме навежда на следния
#     въпрос : "Има ли случаи, в които пренебрегваме грешките при стилисичната
#     проверка"?
